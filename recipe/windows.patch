diff --git a/src/fromsmina/fromsmina.cpp b/src/fromsmina/fromsmina.cpp
index 1bb3c85..ab0ae38 100644
--- a/src/fromsmina/fromsmina.cpp
+++ b/src/fromsmina/fromsmina.cpp
@@ -8,6 +8,7 @@
 
 #include <iostream>
 #include <fstream>
+#include <vector>
 #include "CommandLine2/CommandLine.h"
 #include "SminaConverter.h"
 #include <boost/archive/binary_iarchive.hpp>
@@ -32,8 +33,8 @@ int main(int argc, char *argv[])
   {
     unsigned sz;
     ifile.read((char*)&sz, sizeof(sz));
-    char buffer[sz+1];
-    ifile.read(buffer, sz);
+    std::vector<char> buffer(sz+1);
+    ifile.read(buffer.data(), sz);
 
     if(!ifile) break;
 
diff --git a/src/server/Logger.h b/src/server/Logger.h
index 94dbca3..5d88e80 100644
--- a/src/server/Logger.h
+++ b/src/server/Logger.h
@@ -32,7 +32,7 @@ public:
 			cerr << "Could not open log directory " << logname << "\n";
 			exit(-1);
 		}
-		setlinebuf(LOG);
+		setvbuf(LOG, NULL, _IOLBF, 0);
 	}
 
 	~Logger()
diff --git a/src/server/MinimizationQuery.cpp b/src/server/MinimizationQuery.cpp
index 3a8b824..9471d09 100644
--- a/src/server/MinimizationQuery.cpp
+++ b/src/server/MinimizationQuery.cpp
@@ -5,6 +5,13 @@
  *      Author: dkoes
  */
 
+#ifdef _WIN32
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#else
+#include <unistd.h>
+#endif
+
 #include <sstream>
 
 #include "MinimizationQuery.h"
@@ -244,7 +251,13 @@ void MinimizationQuery::thread_minimize(MinimizationQuery* q)
 			if (q->stopQuery) //cancelled
 				return;
 			else if (ligands.size() == 0) //nothing to do yet
+			{
+			#ifdef _WIN32
+				Sleep(1);
+			#else
 				usleep(10);
+			#endif
+			}
 			else //let's minimize!
 			{
 				vector<Result*> results;
@@ -280,7 +293,7 @@ void MinimizationQuery::thread_minimize(MinimizationQuery* q)
 				}
 
 				//add computed results
-				boost::lock_guard<shared_mutex> lock(q->results_mutex);
+				boost::lock_guard<boost::shared_mutex> lock(q->results_mutex);
 				for (unsigned i = 0, n = results.size(); i < n; i++)
 				{
 					results[i]->position = q->allResults.size();
@@ -397,7 +410,7 @@ unsigned MinimizationQuery::loadResults(const MinimizationFilters& filter,
 			}
 		}
 		swap(results,tmpres);
-		
+
 	}
 	return total;
 }
